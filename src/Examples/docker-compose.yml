version: '3.7'

networks:
  shopping-example:
    driver: bridge

services:

  shopping.eventstore:
    container_name: shopping.eventstore
    image: eventstore/eventstore:21.10.2-buster-slim
    ports:
      - '2113:2113'
      - '1113:1113'
    environment:
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_RUN_PROJECTIONS=all
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - PROJECTION_THREADS=8
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    # ES healthcheck doesnt't work properly. Turn it off in docker compose
    healthcheck:
      test: ["NONE"]
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore
    networks:
      - shopping-example

  shopping.api:
    container_name: shopping.api
    build:
      context: ../
      dockerfile: ./Examples/Shopping.Api/Dockerfile
    image: shopping.api
    ports:
      - "5000:80"
      - "5001:443"
    depends_on:
      - database
    networks:
      - shopping-example

  shopping.readmodel:
    container_name: shopping.readmodel
    build:
      context: ../
      dockerfile: ./Examples/Shopping.ReadModel/Dockerfile
    image: shopping.readmodel
    ports:
      - "5010:80"
      - "5011:443"
    depends_on:
      - database
    networks:
      - shopping-example

  database:
    image: postgres:13.3
    container_name: shopping.db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=shopping
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - shopping-example

volumes:
  eventstore-volume-data:
  eventstore-volume-logs:
